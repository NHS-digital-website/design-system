// Settings
@use "scss-core/settings/font-face";
@use "scss-core/settings/vars";
@use "scss-core/settings/media-queries" as *;

// Tokens
@use "scss-core/tokens/colours" as nhsd-colours;
@use "scss-core/tokens/fonts" as nhsd-fonts;
@use "scss-core/tokens/spacing" as nhsd-spacing;
@use "scss-core/tokens/utils" as nhsd-utils;
@use "scss-core/tokens/transition" as nhsd-transition;

// Component imports
@use "../../atoms/icon";

// Private members
$-root: ".nhsd-a-button";
$active-state-push-down: .111rem;

#{$-root} {
  @include nhsd-utils.box-sizing;
  @include nhsd-fonts.font-family;

  display: inline;
  position: relative;
  align-items: center;
  justify-content: center;
  max-width: 15.55rem;
  margin-bottom: 1.78rem;
  padding: nhsd-spacing.get(2) nhsd-spacing.get(4);
  border: .12rem solid nhsd-colours.get("blue");
  border-radius: 1.22rem;
  outline: 0;
  box-shadow: 0 0 0 .167rem transparent;
  font-size: .78rem;
  font-weight: 600;
  line-height: 1.11;

  text-align: center;
  text-decoration: none;
  vertical-align: text-bottom;
  cursor: pointer;
  appearance: none;
  user-select: none;

  transition-property: background-color, box-shadow, border-color;
  transition-duration: nhsd-transition.$transition-duration;

  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: vars.$min-button-size;
    height: vars.$min-button-size;
    transform: translateX(-50%) translateY(-50%);
    border-radius: 100%;
  }

  &__label {
    min-height: nhsd-spacing.get(4);
    padding-top: 1px;
    overflow: hidden;
    line-height: calc(#{nhsd-spacing.get(4)} - 1px);
    text-overflow: ellipsis;
    vertical-align: text-bottom;
    white-space: nowrap;
  }

  .nhsd-a-icon {
    vertical-align: text-bottom;

    & > svg {
      fill: nhsd-colours.get("white");
    }
  }

  &--circle {
    padding: nhsd-spacing.get(2);
  }

  &--circle-condensed {
    padding: nhsd-spacing.get(1);
  }

  &__label + .nhsd-a-icon,
  .nhsd-a-icon + &__label {
    margin-left: nhsd-spacing.get(2);
  }

  &:disabled,
  &--disabled {
    border-color: nhsd-colours.get("mid-grey-20-tint");
    color: nhsd-colours.get("dark-grey");
    background: nhsd-colours.get("mid-grey-20-tint");
    cursor: not-allowed;

    .nhsd-a-icon {
      & > svg {
        fill: nhsd-colours.get("dark-grey");
      }
    }
  }

  &:not(:disabled):not(&--disabled) {
    &.js-active,
    &:focus,
    &:hover {
      box-shadow: 0 0 0 .167rem nhsd-colours.get("yellow");
    }

    &:active {
      transition-property: none;
      transform: translateY($active-state-push-down);
      box-shadow: 0 0 0 .167rem transparent;
    }
  }

  &:not(&--invert):not(&--outline):not(&--start):not(&--cancel):not(&--disabled):not(:disabled) {
    &,
    &:visited {
      &:not(#{$-root}--transparent) {
        color: nhsd-colours.get("white");
        background: nhsd-colours.get("blue");
      }
    }

    &:active {
      background: nhsd-colours.get("blue");
      box-shadow: 0 0 0 .167rem transparent;
    }

    &:not(:disabled):not(#{$-root}--disabled) {
      &.js-active,
      &:focus,
      &:hover {
        border-color: nhsd-colours.get("dark-blue");
        background: nhsd-colours.get("dark-blue");

        .nhsd-a-icon {
          & > svg {
            fill: nhsd-colours.get("white");
          }
        }
      }

      &:active {
        border-color: nhsd-colours.get("blue");
        background: nhsd-colours.get("blue");
        transition-property: none;
      }
    }
  }

  &--start {
    border-color: nhsd-colours.get("dark-green");
    color: nhsd-colours.get("white");
    background: nhsd-colours.get("dark-green");
  }

  &--cancel {
    border-color: nhsd-colours.get("accessible-red");
    color: nhsd-colours.get("white");
    background: nhsd-colours.get("accessible-red");
  }

  &--invert {
    border-color: nhsd-colours.get("white");
    color: nhsd-colours.get("blue");
    background: nhsd-colours.get("white");

    .nhsd-a-icon {
      & > svg {
        fill: nhsd-colours.get("blue");
      }
    }
  }

  &--outline {
    color: nhsd-colours.get("blue");
    background: nhsd-colours.get("white");

    .nhsd-a-icon {
      & > svg {
        fill: nhsd-colours.get("blue");
      }
    }

    &:active {
      border-color: nhsd-colours.get("blue");
      box-shadow: 0 0 0 .167rem transparent;
    }

    &:not(:disabled):not(#{$-root}--disabled) {
      &:focus,
      &:hover {
        border-color: nhsd-colours.get("black");
      }

      &:active {
        border-color: nhsd-colours.get("blue");
      }
    }
  }

  &--responsive {
    @include mq($until: s) {
      width: 100%;
    }
  }

  &--transparent {
    border: 1px solid transparent;
    background: transparent;

    .nhsd-a-icon {
      & > svg {
        fill: nhsd-colours.get("black");
      }
    }
  }
}

input[type=submit],
input[type=reset] {
  &#{$-root} {
    display: inline-block;
    min-height: calc(#{nhsd-spacing.get(7)} - .69px);
  }
}
