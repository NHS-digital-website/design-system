// Settings
@use "scss-core/settings/vars";
@use "scss-core/settings/media-queries" as *;

// Tokens
@use "scss-core/tokens/colours" as nhsd-colours;
@use "scss-core/tokens/spacing" as nhsd-spacing;
@use "scss-core/tokens/transition" as nhsd-transition;
@use "scss-core/tokens/utils" as nhsd-utils;

// Component imports
@use "../../atoms/arrow";
@use "../../atoms/box";
@use "../../atoms/box-link";
@use "../../atoms/button";
@use "../../atoms/icon";
@use "../../atoms/image";
@use "../../atoms/tag";

// Private members
$-root: ".nhsd-m-card";
$-icon-size: 2.1rem;
$-box-padding: 1.111rem;

#{$-root} {
  display: block;
  position: relative;
  min-height: vars.$min-card-height;

  @include mq($until: s) {
    min-height: 8.333rem;
  }

  &__content-box {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    padding: $-box-padding $-box-padding 0;
  }

  &__button-box {
    padding: 0 $-box-padding $-box-padding;
  }

  [class^="nhsd-t-heading"] {
    margin-bottom: nhsd-spacing.get(1);
  }

  .nhsd-a-arrow,
  .nhsd-a-button {
    align-self: baseline;
    margin-top: nhsd-spacing.get(4);
    margin-bottom: 0;
  }

  &__date {
    display: block;
    margin: -.175rem 0 .2rem;
    color: nhsd-colours.get("dark-grey");
    font-size: .778rem;
    font-weight: bold;
    letter-spacing: -.0167rem;
    line-height: 1rem;
  }

  &__tag-list {
    display: flex;
    position: absolute;
    top: 0;

    .nhsd-a-tag {
      &:not(:last-child) {
        margin-right: nhsd-spacing.get(2);
      }
    }

    & + *:nth-of-type(1) {
      margin-top: .75rem;
    }

    & + #{$-root}__date {
      margin-top: 1.5rem;
    }
  }

  .nhsd-a-tag {
    display: inline-block;
    align-self: flex-start;
  }

  // TODO - Not sure why we need this specificity, investigate why the atom overrides the molecule styling
  &__icon.nhsd-a-icon {
    display: block;
    position: absolute;
    top: $-box-padding;
    right: $-box-padding;
    width: $-icon-size;
    height: $-icon-size;
  }

  [class^="nhsd-t-body"] {
    margin: 0 0 .8rem;

    &:last-of-type {
      margin-bottom: 0;
    }
  }

  .nhsd-a-box {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0;

    &--bg-dark-grey,
    &--bg-blue {
      &,
      #{$-root}__date,
      [class^="nhsd-t-heading"],
      [class^="nhsd-t-body"] {
        color: nhsd-colours.get("white");
      }
    }

    &--bg-yellow {
      &,
      #{$-root}__date,
      [class^="nhsd-t-heading"],
      [class^="nhsd-t-body"] {
        color: nhsd-colours.get("black");
      }
    }
  }

  .nhsd-a-image {
    & + #{$-root}__content-box {
      padding-top: $-box-padding * .4;

      & > *:nth-child(1) {
        margin-top: .278rem;
      }

      #{$-root}__date {
        margin-top: nhsd-spacing.get(2);
      }
    }
  }

  .nhsd-a-button {
    pointer-events: none;
  }

  &:active {
    .nhsd-a-button {
      transform: translateY(button.$active-state-push-down);
    }
  }

  &--with-icon {
    [class^="nhsd-t-heading"] {
      margin-bottom: nhsd-spacing.get(3);
      padding-right: $-icon-size * 1.5;
    }

    [class^="nhsd-t-body"] {
      padding-right: $-icon-size;
    }
  }

  &--light-text {
    @include nhsd-utils.light-text;
  }
}
