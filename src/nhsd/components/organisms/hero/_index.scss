// Built in modules
@use "sass:map";

// Settings
@use "scss-core/settings/vars";
@use "scss-core/settings/media-queries" as *;

// Tokens
@use "scss-core/tokens/colours" as nhsd-colours;
@use "scss-core/tokens/fonts" as nhsd-fonts;
@use "scss-core/tokens/utils" as nhsd-utils;
@use "scss-core/tokens/spacing" as nhsd-spacing;
@use "scss-core/tokens/typography" as nhsd-typography;

// Component imports
@use "../../atoms/button";
@use "../../atoms/colour-bar";
@use "../../atoms/image";

// Private members
$-root: ".nhsd-o-hero";

$-breakpoints: "xs", "s", "m", "l", "xl";

#{$-root} {
  display: flex;
  position: relative;
  max-width: vars.$max-component-width;
  min-height: vars.$min-banner-mobile-height;
  margin: 0 auto;
  overflow: hidden;
  justify-content: center;
  background: nhsd-colours.get("pale-grey");

  @include mq($from: s) {
    min-height: vars.$min-banner-height;
  }

  [class^="nhsd-t-heading"] {
    @include nhsd-utils.clamped-text(3);
  }

  [class^="nhsd-t-body"] {
    @include nhsd-utils.clamped-text(5);
  }

  &--left-align {
    justify-content: flex-start;

    #{$-root}__content-container {
      width: 80%;
      max-width: 80%;

      @each $-breakpoint in $-breakpoints {
        @include mq($from: $-breakpoint) {
          padding-right: calc((100% - #{map.get(vars.$content-width, $-breakpoint)}) / 2);
          padding-left: calc((100% - #{map.get(vars.$content-width, $-breakpoint)}) / 2);
        }
      }

      @include mq($until: xs) {
        width: 90%;
        max-width: 90%;
      }

      @include mq($until: t) {
        width: 100%;
        max-width: 100%;
      }
    }

    .nhsd-a-digiblocks--pos-tl,
    .nhsd-a-digiblocks--pos-bl {
      display: none;
    }
  }

  &__content-container {
    display: flex;
    position: relative;
    z-index: 1;
    justify-content: center;
    flex-direction: column;
    align-items: flex-start;
    max-width: 100%;
    grid-row: 1;

    @include mq($from: t) {
      max-width: map.get(vars.$content-width, "xs");
    }

    @include mq($from: xl) {
      max-width: map.get(vars.$content-width, "s");
    }
  }

  &__inner-content-container {
    padding: nhsd-spacing.get(8) vars.$gutter * 2;

    @include mq($until: s) {
      padding: nhsd-spacing.get(8) vars.$small-gutter * 2;
    }
  }

  &__iframe-wrapper {
    position: relative;
    z-index: 1;
    min-height: 100%;
    padding-bottom: 56.25%;
  }

  &__iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &__meta-data {
    display: inline-table;
    margin: 0;
    font-size: .888rem;
    text-align: left;
  }

  &__meta-data-item {
    display: table-row;
  }

  &__meta-data-item-title,
  &__meta-data-item-description {
    display: table-cell;
    margin: 0;
  }

  &__meta-data-item-title {
    padding-right: nhsd-spacing.get(4);
    @include nhsd-fonts.font-weight(bold);
  }

  @include mq($until: t) {
    &__meta-data,
    &__meta-data-item,
    &__meta-data-item-title,
    &__meta-data-item-description {
      display: block;
    }

    &__meta-data-item {
      padding: nhsd-spacing.get(1) 0;
    }
  }

  .nhsd-a-digiblocks {
    z-index: 0;
  }

  &--light-text {
    @include nhsd-utils.light-text;
  }

  &--image-accented-mirrored,
  &--image-accented {
    display: grid;
    grid-template-rows: 1fr auto;
    grid-template-columns: 50% 50%;
    max-width: vars.$max-component-width;
    margin: 0 auto;
    padding: 0;

    @include mq($until: s) {
      grid-template-columns: 100%;
    }

    #{$-root}__image-container {
      grid-row: 1;
    }

    @include mq($from: s) {
      #{$-root}__image-container {
        grid-row-start: 1;
        grid-row-end: 3;
      }
    }

    #{$-root}__inner-content-container {
      @include mq($until: s) {
        padding: nhsd-spacing.get(8) vars.$small-gutter * 2;
      }

      @include mq($until: xs) {
        padding: nhsd-spacing.get(6) vars.$small-gutter * 2;
      }
    }

    #{$-root}__content-container {
      max-width: 100%;
      align-items: flex-start;
      padding: 0;

      @each $-breakpoint in $-breakpoints {
        @include mq($from: $-breakpoint) {
          padding-right: calc((100% - #{map.get(vars.$content-width, $-breakpoint)}) / 2);
          padding-left: calc((100% - #{map.get(vars.$content-width, $-breakpoint)}) / 2);
        }
      }

      @include mq($from: s) {
        padding: nhsd-spacing.get(4) nhsd-spacing.get(6);
      }

      @include mq($from: m) {
        padding: nhsd-spacing.get(8) nhsd-spacing.get(10);
      }

      @include mq($until: s) {
        grid-row: 2;
      }
    }

    .nhsd-a-image {
      &,
      &__picture {
        height: 100%;
      }
    }

    .nhsd-a-colour-bar {
      height: nhsd-spacing.get(7);

      @include mq($from: l) {
        height: nhsd-spacing.get(9);
      }
    }

    .nhsd-a-image:not(.nhsd-a-image--square) {
      @include mq($from: s, $until: l) {
        .nhsd-a-image__picture {
          padding-bottom: 68.9922481%;
        }
      }
    }
  }

  &--image-accented-mirrored {
    @include mq($from: s) {
      #{$-root}__image-container {
        grid-column: 1;
      }
      #{$-root}__content-container {
        grid-column: 2;
      }
    }
  }

  &--image {
    #{$-root}__content-container,
    #{$-root}__image-container {
      width: 50%;
      max-width: 50%;
    }

    @include mq($from: s) {
      #{$-root}__content-container {
        padding-right: 0;
      }

      #{$-root}__inner-content-container {
        padding-top: 0;
        padding-bottom: 0;
      }

      #{$-root}__image-container {
        max-height: vars.$max-banner-height;
      }
    }

    @include mq($until: xs) {
      #{$-root}__inner-content-container {
        padding: nhsd-spacing.get(6) vars.$gutter * 2;
      }
    }

    @include mq($until: s) {
      flex-direction: column-reverse;
      align-items: center;

      #{$-root}__content-container,
      #{$-root}__image-container {
        width: 100%;
        max-width: 100%;
      }
    }
  }

  &--background-image {
    padding-bottom: 35vw;

    @include mq($from: l) {
      padding-bottom: 390px;
    }

    #{$-root}__image-container {
      position: absolute;
      top: calc(100% - 35vw - 90px);
      right: 0;
      bottom: 0;
      left: 0;
      -webkit-mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 55%);
      mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 55%);

      @include mq($from: l) {
        top: calc(100% - 495px);
      }
    }
  }
}
