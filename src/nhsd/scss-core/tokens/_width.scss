// stylelint-disable declaration-no-important

// Built in modules
@use "sass:map";
@use "sass:string";

// Settings
@use "scss-core/settings/media-queries" as *;

// Tokens
@use "scss-core/tokens/fonts";
@use "scss-core/tokens/utils" as nhsd-utils;

$-device-breakpoints: (xs,s,m,l,xl);

// Private members
$-root: ".nhsd-";
$-steps: (
  0: 0,
  1: 5px,
  2: 10px,
  3: 15px,
  4: 20px,
  5: 25px,
  6: 30px,
  7: 45px,
  8: 60px,
  9: 75px,
  10: 90px,
);
$-props: margin, padding;
$-dirs: top, right, bottom, left;

// Public members
// =========================================================
// Functions and mixins
// =========================================================

@function get($index: 0) {
  $value: null;
  @if ($index >= 0) {
    $value: map.get($-steps, $index);
  } @else {
    $value: map.get($-steps, -$index);
    $value: -$value;
  }

  @return nhsd-utils.px-to-rem($value);
}

@mixin set-responsive($property: margin, $index: 0) {
  #{$property}: get($index);

  @if $index > 0 {
    @include mq($until: s) {
      #{$property}: get($index - 1);
    }
  }

  @if $index < 0 {
    @include mq($until: s) {
      #{$property}: get($index + 1);
    }
  }
}

// =========================================================
// Utility override classes
// =========================================================

@each $prop in $-props {
  $i: -1;
  @each $step in $-steps {
    $i: $i + 1;
    #{$-root}\!t-#{$prop}-#{$i} {
      #{$prop}: get($i) !important;

      @if $i > 0 {
        @include mq($until: s) {
          #{$prop}: get($i - 1) !important;
        }
      }
    }

    // Responsive
    @each $-device in $-device-breakpoints {
      #{$-root}\!t-#{$prop}-#{$-device}-#{$i} {
        @include mq($until: #{$-device}) {
          #{$prop}: get($i) !important;
        }
      }
    }

    @each $dir in $-dirs {
      #{$-root}\!t-#{$prop}-#{$dir}-#{$i} {
        #{$prop}-#{$dir}: get($i) !important;

        @if $i > 0 {
          @include mq($until: s) {
            #{$prop}-#{$dir}: get($i - 1) !important;
          }
        }
      }

      // Responsive
      @each $-device in $-device-breakpoints {
        #{$-root}\!t-#{$prop}-#{$dir}-#{$-device}-#{$i} {
          @include mq($until: #{$-device}) {
            #{$prop}-#{$dir}: get($i) !important;
          }
        }
      }
    }
  }
}

// stylelint-enable declaration-no-important
